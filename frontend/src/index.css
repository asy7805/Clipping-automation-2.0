@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 263 70% 8%;
    --foreground: 0 0% 100%;

    --card: 263 50% 12%;
    --card-foreground: 0 0% 100%;

    --popover: 263 60% 10%;
    --popover-foreground: 0 0% 100%;

    --primary: 263 85% 65%;
    --primary-foreground: 0 0% 100%;

    --secondary: 263 30% 20%;
    --secondary-foreground: 0 0% 100%;

    --muted: 263 30% 18%;
    --muted-foreground: 263 10% 65%;

    --accent: 280 90% 70%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 263 30% 25%;
    --input: 263 30% 25%;
    --ring: 263 85% 65%;

    --radius: 0.75rem;

    /* Status colors */
    --success: 160 84% 39%;
    --warning: 38 92% 50%;
    --info: 217 91% 60%;
    
    /* Score colors */
    --score-gold: 43 96% 56%;
    --score-green: 160 84% 39%;
    --score-blue: 217 91% 60%;
    --score-gray: 215 14% 54%;
    
    /* Chart gradients */
    --chart-1: 262 83% 58%;
    --chart-2: 300 76% 62%;
    --chart-3: 217 91% 60%;
    --chart-4: 160 84% 39%;
    --chart-5: 38 92% 50%;

    /* Gradient colors for background */
    --gradient-start: 263 70% 8%;
    --gradient-mid: 270 60% 20%;
    --gradient-end: 280 50% 15%;
    
    --glow-primary: 263 100% 70%;
    --glow-accent: 280 100% 75%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    background: linear-gradient(135deg, hsl(var(--gradient-start)) 0%, hsl(var(--gradient-mid)) 50%, hsl(var(--gradient-end)) 100%);
    background-attachment: fixed;
    position: relative;
  }

  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(ellipse 80% 50% at 50% -20%, hsl(var(--primary) / 0.15), transparent),
      radial-gradient(ellipse 60% 50% at 0% 50%, hsl(var(--accent) / 0.1), transparent),
      radial-gradient(ellipse 60% 50% at 100% 50%, hsl(var(--primary) / 0.1), transparent);
    pointer-events: none;
    z-index: 0;
  }
}

@layer utilities {
  .glass {
    background: rgba(30, 41, 59, 0.4);
    backdrop-filter: blur(16px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .glass-strong {
    background: rgba(30, 41, 59, 0.6);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.15);
  }

  .glow-text {
    text-shadow: 0 0 40px hsl(var(--glow-primary) / 0.5);
  }

  .pulse-dot {
    animation: pulse-dot 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse-dot {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  .shimmer {
    background: linear-gradient(
      90deg,
      hsl(var(--card)) 0%,
      hsl(var(--muted)) 50%,
      hsl(var(--card)) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  .count-up {
    font-variant-numeric: tabular-nums;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .mesh-gradient {
    background: 
      radial-gradient(at 40% 20%, hsl(var(--primary) / 0.3) 0px, transparent 50%),
      radial-gradient(at 80% 0%, hsl(var(--accent) / 0.2) 0px, transparent 50%),
      radial-gradient(at 0% 50%, hsl(var(--primary) / 0.2) 0px, transparent 50%),
      radial-gradient(at 80% 50%, hsl(var(--accent) / 0.15) 0px, transparent 50%),
      radial-gradient(at 0% 100%, hsl(var(--primary) / 0.2) 0px, transparent 50%),
      radial-gradient(at 80% 100%, hsl(var(--accent) / 0.2) 0px, transparent 50%);
  }

  .animate-fade-in {
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slide-up {
    animation: slideUp 0.4s ease-out;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  @keyframes pulseGlow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
    }
    50% {
      box-shadow: 0 0 30px hsl(var(--primary) / 0.6);
    }
  }

  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .card-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card-hover:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(124, 58, 237, 0.2), 
                0 10px 10px -5px rgba(124, 58, 237, 0.1);
  }

  .score-badge-gold {
    background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
    box-shadow: 0 0 20px rgba(251, 191, 36, 0.4);
  }

  .score-badge-green {
    background: linear-gradient(135deg, #10B981 0%, #34D399 100%);
    box-shadow: 0 0 20px rgba(16, 185, 129, 0.4);
  }

  .score-badge-blue {
    background: linear-gradient(135deg, #3B82F6 0%, #60A5FA 100%);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
  }
}
